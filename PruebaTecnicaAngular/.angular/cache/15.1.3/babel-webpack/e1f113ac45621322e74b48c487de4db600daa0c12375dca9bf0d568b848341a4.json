{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/escuela.service\";\nimport * as i3 from \"@angular/forms\";\nexport class UpdateCalifComponent {\n  constructor(route, escuelaService, router) {\n    this.route = route;\n    this.escuelaService = escuelaService;\n    this.router = router;\n    this.calificacionId = 0;\n    this.alumnoId = 0;\n    this.nombreMateria = '';\n  }\n  ngOnInit() {\n    const routeParams = this.route.snapshot.paramMap;\n    const queryParams = this.route.snapshot.queryParamMap;\n    console.log(queryParams);\n    this.nombreMateria = queryParams.get('materia') || '';\n    this.alumnoId = Number(queryParams.get('alumnoId')) || -1;\n    const calificacionIdFromRoute = Number(routeParams.get('calificacionId'));\n    this.calificacionId = calificacionIdFromRoute;\n  }\n  save() {\n    const califToNumber = parseFloat(this.calificacionText);\n    console.log(this.calificacionId, califToNumber);\n    if (califToNumber < 1 || califToNumber > 10) {\n      alert(\"Minimo 1 y maximo 10\");\n      return;\n    }\n    this.escuelaService.updateCalificacion(this.calificacionId, califToNumber).subscribe(d => {\n      console.log(d, 'respuesta del registro de calificaciones');\n      if (d.statusCode && d.statusCode != 'error') {\n        this.router.navigate(['/kardex/' + this.alumnoId]);\n      }\n    });\n  }\n}\nUpdateCalifComponent.ɵfac = function UpdateCalifComponent_Factory(t) {\n  return new (t || UpdateCalifComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.EscuelaService), i0.ɵɵdirectiveInject(i1.Router));\n};\nUpdateCalifComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UpdateCalifComponent,\n  selectors: [[\"app-update-calif\"]],\n  decls: 13,\n  vars: 2,\n  consts: [[2, \"margin-bottom\", \"0px\"], [2, \"margin-top\", \"0px\"], [\"type\", \"number\", \"min\", \"1\", \"max\", \"10\", 3, \"ngModel\", \"ngModelChange\"], [2, \"margin-left\", \"10px\", 3, \"click\"]],\n  template: function UpdateCalifComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"Actualizar Calificacion\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\")(3, \"h3\", 0);\n      i0.ɵɵtext(4, \"Materia\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"p\", 1);\n      i0.ɵɵtext(6);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\")(8, \"label\");\n      i0.ɵɵtext(9, \"Calificacion*\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateCalifComponent_Template_input_ngModelChange_10_listener($event) {\n        return ctx.calificacionText = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function UpdateCalifComponent_Template_button_click_11_listener() {\n        return ctx.save();\n      });\n      i0.ɵɵtext(12, \"Actualizar\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵtextInterpolate(ctx.nombreMateria);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.calificacionText);\n    }\n  },\n  dependencies: [i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.MinValidator, i3.MaxValidator, i3.NgModel]\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}